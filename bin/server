#!/usr/bin/env node

'use strict';

const winston = require('winston');
const config = require('config');

// Setup Caching strategy
const strategyConfig = config.get('strategy');
let strategyModule = `catbox-${strategyConfig.plugin}`;

// Use the vendor package until resolution of PR https://github.com/fhemberger/catbox-s3/pull/55
if (strategyConfig.plugin === 's3') {
    strategyModule = `../vendor/${strategyModule}`;
}
// eslint-disable-next-line import/no-dynamic-require
const strategy = require(strategyModule);
const cache = Object.assign({ engine: strategy }, strategyConfig[strategyConfig.plugin]);

const httpd = config.get('httpd');
const auth = config.get('auth');
const builds = config.get('builds');
const commands = config.get('commands');
const ecosystem = config.get('ecosystem');

require('../')({
    cache,
    httpd,
    builds,
    commands,
    auth,
    ecosystem
}, (err, server) => {
    if (err) {
        winston.error(err);

        return process.exit(1);
    }

    return winston.info('Server running at %s', server.info.uri);
});
